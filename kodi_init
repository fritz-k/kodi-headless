#!/bin/bash

set -e
trap 'kill $(jobs -p) 2>/dev/null' EXIT

default_advancedsettings=true
cp /usr/local/share/kodi/advancedsettings.xml.default /config/userdata/advancedsettings.xml || {
  default_advancedsettings=false
  echo "Change ownership of /config/userdata/advancedsettings.xml: NO (file is mounted read-only)"
}
if [ "$default_advancedsettings" = true ]; then
  echo "Change ownership of /config/userdata/advancedsettings.xml: YES"
  chown kodi. /config/userdata/advancedsettings.xml
fi

echo "======================================================="

if [ "$default_advancedsettings" = false ]; then
  echo "Overwrite MySQL settings: NO (/config/userdata/advancedsettings.xml is mounted read-only)"
elif [ ! -z $KODI_DBHOST ] && [ ! -z $KODI_DBUSER ] && [ ! -z $KODI_DBPASS ]; then
  echo "Overwrite MySQL settings: YES"
  sed -i -e "s/\(<host>\)\([^<]*\)\(<[^>]*\)/\1$KODI_DBHOST\3/g" /config/userdata/advancedsettings.xml
  sed -i -e "s/\(<user>\)\([^<]*\)\(<[^>]*\)/\1$KODI_DBUSER\3/g" /config/userdata/advancedsettings.xml
  sed -i -e "s/\(<pass>\)\([^<]*\)\(<[^>]*\)/\1$KODI_DBPASS\3/g" /config/userdata/advancedsettings.xml
  sed -i -e "s/\(<type>\)\([^<]*\)\(<[^>]*\)/\1mysql\3/g" /config/userdata/advancedsettings.xml
  sed -i -e "s/\(<port>\)\([^<]*\)\(<[^>]*\)/\13306\3/g" /config/userdata/advancedsettings.xml
else
  echo "Shared MySQL database: NO"
fi

if [ -z $KODI_UPDATE_INTERVAL ]; then
  KODI_UPDATE_INTERVAL="300"
fi
if [ -z $KODI_CLEAN_INTERVAL ]; then
  KODI_CLEAN_INTERVAL="86400"
fi

function update_library_job {
  while true; do
    sleep $KODI_UPDATE_INTERVAL
    sleep $((RANDOM % 5))
    su kodi -c "kodi-send --action='UpdateLibrary(video)'" > /dev/null
    su kodi -c "kodi-send --action='UpdateLibrary(music)'" > /dev/null
  done
}

function clean_library_job {
  while true; do
    sleep $KODI_CLEAN_INTERVAL
    su kodi -c "kodi-send --action='CleanLibrary(video)'" > /dev/null
    su kodi -c "kodi-send --action='CleanLibrary(music)'" > /dev/null
  done
}

update_library_job &
echo "Automatic library update: YES (${KODI_UPDATE_INTERVAL}s)"

if [[ $KODI_CLEAN == "yes" ]] || [[ $KODI_CLEAN == "true" ]]; then
  if [ -e /config/userdata/sources.xml ]; then
    echo "Automatic library cleaning: YES (${KODI_CLEAN_INTERVAL}s)"
    clean_library_job &
  else
    echo "Automatic library cleaning: NO (/config/userdata/sources.xml not found)"
  fi
else
  echo "Automatic library cleaning: NO"
fi

echo "======================================================="

echo "Starting Kodi..."
if [ -f /config/temp/kodi.log ]; then
  rm /config/temp/kodi.log
fi
tail -F -q /config/temp/kodi.log 2>/dev/null &
exec su kodi -c "kodi -p --standalone --headless"
